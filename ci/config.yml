---

tasks:
- repo_path: https://github.com/apoydence/triple-c
  parameters:
    CF_SYSTEM_DOMAIN: ((CF_SYSTEM_DOMAIN))
    CF_USERNAME: ((CF_USERNAME))
    CF_PASSWORD: ((CF_PASSWORD))
    CF_SPACE: ((CF_SPACE))
    CF_ORG: ((CF_ORG))
    CF_APP_NAME: ((CF_APP_NAME))
  command: |
    set -ex

    export DESTINATION=/dev/shm

    wget \
      'https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz' \
      -O $DESTINATION/go1.10.2.linux-amd64.tar.gz \
      --quiet

    tar -C $DESTINATION -xzf $DESTINATION/go1.10.2.linux-amd64.tar.gz

    wget \
      'https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github-rel' \
      -O $DESTINATION/cf.tgz \
      --quiet

    tar -C $DESTINATION -xzf $DESTINATION/cf.tgz

    export PATH=$PATH:$DESTINATION/go/bin

    # Find CF CLI and add to path
    export PATH=$PATH:$DESTINATION/$(ls $DESTINATION/cf-cli* | head -n1)

    mkdir -p workspace
    pushd workspace
        export GOPATH=$(pwd)
    popd

    go version

    export OWNER=apoydence
    export REPO=triple-c

    mkdir -p $GOPATH/src/github.com/$OWNER/
    mv $REPO $GOPATH/src/github.com/$OWNER/
    pushd $GOPATH/src/github.com/$OWNER/$REPO
        go get -t -d ./...
        go test --race ./...
    popd

    cf version

    # Hide these secrets.
    set +x
        cf login -a api.$CF_SYSTEM_DOMAIN -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
    set -x

    pushd $GOPATH/src/github.com/$OWNER/$REPO/cmd/triple-c
        if [[ $(git branch | egrep "^\*" | grep "origin/master") ]]; then
            # We're going to assume we already have this pushed and that we
            # are simply updating the deployed bits. Therefore, this doesn't
            # do any configuration.
            if cf app $CF_APP_NAME &> /dev/null; then
                go build
                cf push $CF_APP_NAME &> /dev/null
            fi
        fi
    popd
